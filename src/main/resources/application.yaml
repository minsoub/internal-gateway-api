# Spring Cloud Gateway server port
server:
  port: 7070
management:
  endpoints:
    web:
      exposure:
        include: metrics, prometheus, health
spring:
  cloud:
    gateway:
      httpclient:
        connect-timeout: 10000
        response-timeout: 60s
        pool:
          max-idle-time: 20
      metrics:
        enabled: true
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
  pid:
    file: ${instance.pid}
---
spring:
  config:
    import: classpath:aws-properties.yml
    activate:
      on-profile: local
logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
sites:
  smart-admin-gateway-url: http://localhost:7071
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam/mail,/api/v1/lrc/user/join,/api/v1/lrc/user/join/certification,/api/v1/lrc/user/password/reset,/api/v1/lrc/user/password/reset/email
allow-hosts:
  mng:
    - http://localhost
    - https://smartadmin.bithumbsystems.com
---
spring:
  config:
    import: classpath:aws-properties-eks-dev.yml
    activate:
      on-profile: eks-dev
logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
sites:
  smart-admin-gateway-url: http://k8s-systemsd-systemsg-d8965d6033-f02444dccaaaabac.elb.ap-northeast-2.amazonaws.com
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam/mail,/api/v1/lrc/user/join,/api/v1/lrc/user/join/certification,/api/v1/lrc/user/password/reset,/api/v1/lrc/user/password/reset/email
allow-hosts:
  mng:
    - http://localhost
    - https://smartadmin.bithumbsystems.com
---
spring:
  config:
    import: classpath:aws-properties-dev.yml
    activate:
      on-profile: dev
logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
sites:
  smart-admin-gateway-url: https://smartadmin-gateway-api.dev.bithumb.com
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam/mail,/api/v1/lrc/user/join,/api/v1/lrc/user/join/certification,/api/v1/lrc/user/password/reset,/api/v1/lrc/user/password/reset/email
allow-hosts:
  mng:
    - https://smartadmin.dev.bithumb.com
---
spring:
  config:
    import: classpath:aws-properties-qa.yml
    activate:
      on-profile: qa
logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
sites:
  smart-admin-gateway-url: https://smartadmin-gateway-api.qa.bithumb.com
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam/mail,/api/v1/lrc/user/join,/api/v1/lrc/user/join/certification,/api/v1/lrc/user/password/reset,/api/v1/lrc/user/password/reset/email
allow-hosts:
  mng:
    - https://smartadmin.qa.bithumb.com
---
spring:
  config:
    import: classpath:aws-properties.yml
    activate:
      on-profile: prod
logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
sites:
  smart-admin-gateway-url: https://smartadmin-gateway-api.bithumb.com
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam/mail,/api/v1/lrc/user/join,/api/v1/lrc/user/join/certification,/api/v1/lrc/user/password/reset,/api/v1/lrc/user/password/reset/email
allow-hosts:
  mng:
    - https://smartadmin.bithumb.com
---
# Spring cloud gateway setup
#spring:
#  cloud:
#    gateway:
#      # gateway common filter
#      default-filters:
#        - name: GlobalFilter
#          args:
#            baseMessage: Spring Cloud Gateway GlobalFilter
#            preLogger: true
#            postLogger: true
#       #Route definition
#       #ID, Destination(uri), Predicate, filter definition
#      routes:
#        - id: user-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/user/**
#          # Filter
#          filters:
#            - name: UserFilter
#              args:
#                baseMessage: UserFilter apply
#                preLogger: true
#                postLooger: true
#            - RewritePath=/user/(?<path>.*),/api/v1/user/$\{path}
#        - id: adm-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/adm/**
#          # Filter
#          filters:
#            - name: UserFilter
#              args:
#                baseMessage: UserFilter apply
#                preLogger: true
#                postLooger: true
#            - RewritePath=/adm/(?<path>.*),/api/v1/adm/$\{path}
#        - id: auth-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/auth/**
#          # Filter
#          filters:
#            - name: AuthFilter
#              args:
#                baseMessage: AuthFilter apply
#                preLogger: true
#                postLooger: true
#        - id: api-service
#          uri: http://localhost:9092
#          predicates:
#            - Path=/api/**
#          filters:
#            - name: ApiFilter
#              args:
#                baseMessage: ApiFilter apply
#                preLogger: true
#                postLogger: true